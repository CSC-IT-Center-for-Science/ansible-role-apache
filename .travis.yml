---
services: docker

env:
  - container_id: $(mktemp)
    distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    ansible_version: 2.7.0.0
  - container_id: $(mktemp)
    distribution: debian
    version: 9
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    ansible_version: 2.7.0.0

before_install:
  - sudo apt-get update 
  # Pull container
  - sudo docker pull ${distribution}:${version}
  # Customize container
  - sudo docker build --rm=true --file=tests/dockerfile.${distribution} --tag=${distribution}:ansible tests

before_script:
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm pip install --upgrade pip
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm pip install ansible==${ansible_version}
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible --version

script:
  # Run container in detached state
  - sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}:ansible "${init}" > "${container_id}"
    # Syntax check
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check
    # Test role
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    # Idempotence test
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | grep -q 'failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

    # Clean up
  - sudo docker stop "$(cat ${container_id})"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
